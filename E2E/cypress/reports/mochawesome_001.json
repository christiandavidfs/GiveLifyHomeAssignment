{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-24T16:08:36.172Z",
    "end": "2024-07-24T16:08:36.596Z",
    "duration": 424,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1cc833a4-52dd-4416-860e-c2340784407b",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\Positive json against response api_spec.cy.js",
      "file": "cypress\\e2e\\api\\Positive json against response api_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4b82096-afaf-464f-92c7-2408babde21d",
          "title": "OMDB API Response Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validates the API response against the fixture data",
              "fullTitle": "OMDB API Response Validation Validates the API response against the fixture data",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const apiKey = Cypress.env('apiKey');\nconst movieTitle = Cypress.env('movieTitle');\nconst url = `${Cypress.config('apiBaseUrl')}?apikey=${apiKey}&t=${encodeURIComponent(movieTitle)}&y=2018`;\ncy.request(url).then(response => {\n  // Validate the response status\n  expect(response.status, 'Expected status to be 200').to.eq(200);\n  if (response.status === 200) {\n    const jsonData = response.body;\n    const expectedData = this.expectedResponse;\n    // Validate the entire response against the fixture data\n    expect(jsonData).to.deep.equal(expectedData);\n  } else {\n    // Log an error message if the status is not 200\n    cy.log(`Error: The condition is not met. Expected status 200, but received status ${response.status}`);\n    throw new Error(`The condition is not met. Expected status 200, but received status ${response.status}`);\n  }\n});",
              "err": {},
              "uuid": "7193da2c-9909-4bb1-9536-570a4530d807",
              "parentUUID": "b4b82096-afaf-464f-92c7-2408babde21d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7193da2c-9909-4bb1-9536-570a4530d807"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 238,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}